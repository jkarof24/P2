t_stat=2.92659
df=36
p_value=2*pt(-abs(t_stat),df)
print(p_value)
source("~/GitHub/P2/R kode/montecarlo bootstrapping.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
fit_polynomial_regression <- function(data) {
formula <- as.formula(paste("y ~", paste(sapply(setdiff(names(data), "y"), function(var) paste("poly(", var, ", 2)")), collapse = " + ")))
lm(formula, data = data)
}
run_simulations <- function(n_simulations, numeric_data, sample_size) {
num_cores <- detectCores() - 1
cl <- makeCluster(num_cores)
registerDoParallel(cl)
clusterExport(cl, c("numeric_data", "fit_polynomial_regression", "monte_carlo_bootstrap", "sample_size"))
clusterEvalQ(cl, library(dplyr))
results <- foreach(i = 1:n_simulations, .combine = rbind, .packages = "dplyr") %dopar% {
resampled_data <- monte_carlo_bootstrap(numeric_data, sample_size)
model <- fit_polynomial_regression(resampled_data)
c(coef(model), summary(model)$r.squared)
}
stopCluster(cl)
results_df <- as.data.frame(results)
colnames(results_df) <- c(names(coef(fit_polynomial_regression(numeric_data))), "r_squared")
return(results_df)
}
set.seed(200)
n_simulations <- 10
sample_size <- 300
results_df <- run_simulations(n_simulations, numeric_data, sample_size)
# Clean column names to remove special characters
clean_colnames <- function(df) {
colnames(df) <- make.names(colnames(df), unique = TRUE)
return(df)
}
results_df <- clean_colnames(results_df)
set.seed(200)
n_simulations <- 10
sample_size <- 300
results_df <- run_simulations(n_simulations, numeric_data, sample_size)
numeric_data
results_df <- run_simulations(n_simulations, numeric_data, sample_size)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/GitHub/P2/R kode/montecarlo bootstrapping med hetro data.R", echo=TRUE)
source("~/GitHub/P2/R kode/montecarlo bootstrapping med homo data.R", echo=TRUE)
source("~/GitHub/P2/R kode/montecarlo bootstrapping med hetro data.R", echo=TRUE)
source("~/GitHub/P2/R kode/montecarlo bootstrapping med hetro data.R", echo=TRUE)
source("~/GitHub/P2/R kode/montecarlo bootstrapping med homo data.R", echo=TRUE)
source("~/GitHub/P2/R kode/montecarlo bootstrapping med hetro data.R", echo=TRUE)
source("~/GitHub/P2/R kode/montecarlo bootstrapping med hetro data.R", echo=TRUE)
source("~/GitHub/P2/R kode/montecarlo bootstrapping med hetro data.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning.R", echo=TRUE)
install.packages(boot)
install.packages("boot")
install.packages("car")
source("~/GitHub/P2/R kode/sammenligning.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
cat("\n--- OLS Model (Prediction Errors) ---\n")
cat("MBEOLS: ", round(MBEOLS, 4), "\n")
cat("RMSEOLS: ", round(RMSEOLS, 4), "\n")
cat("\n--- OLS Model (Coefficient Estimates) ---\n")
print(ols_coefs)
cat("\n--- OLS Model (95% Confidence Intervals for Coefficients) ---\n")
print(ols_confint)
cat("\n--- Bootstrap Model (Prediction Errors) ---\n")
cat("MBEBootstrap: ", round(MBEBootstrap, 4), "\n")
cat("RMSEBootstrap: ", round(RMSEBootstrap, 4), "\n")
cat("\n--- Bootstrap Model (95% Confidence Intervals for Coefficients) ---\n")
# Print the calculated bootstrap confidence intervals
print(bootstrap_coef_ci)
cat("\n--- Bootstrap Model (Standard Errors for Coefficients) ---\n")
# Print the calculated bootstrap standard errors
print(bootstrap_coef_se)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
View(bootstrappredictions)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
cat("\n--- OLS Model (Prediction Errors) ---\n")
cat("MBEOLS: ", round(MBEOLS, 4), "\n")
cat("RMSEOLS: ", round(RMSEOLS, 4), "\n")
cat("\n--- OLS Model (Coefficient Estimates) ---\n")
print(ols_coefs)
cat("\n--- OLS Model (95% Confidence Intervals for Coefficients) ---\n")
print(ols_confint)
cat("\n--- Bootstrap Model (Prediction Errors) ---\n")
cat("MBEBootstrap: ", round(MBEBootstrap, 4), "\n")
cat("RMSEBootstrap: ", round(RMSEBootstrap, 4), "\n")
cat("\n--- Bootstrap Model (95% Confidence Intervals for Coefficients) ---\n")
# Print the calculated bootstrap confidence intervals
print(bootstrap_coef_ci)
cat("\n--- Bootstrap Model (Standard Errors for Coefficients) ---\n")
# Print the calculated bootstrap standard errors
print(bootstrap_coef_se)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/sammenligning2.R", echo=TRUE)
source("~/GitHub/P2/R kode/intro.R", echo=TRUE)
source("~/GitHub/P2/R kode/intro.R", echo=TRUE)
